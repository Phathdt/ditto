name: build and push image

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g. 0.1.0)'
        required: true
        type: string

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Use manually specified version
        id: version
        run: |
          MANUAL_VERSION="${{ github.event.inputs.version }}"
          echo "Using manually specified version: $MANUAL_VERSION"
          echo "new_version=${MANUAL_VERSION}" >> $GITHUB_OUTPUT

  build-amd64:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Build and Push AMD64 Image
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ditto:amd64-${{ needs.prepare.outputs.version }}
          cache-from: type=gha,scope=amd64
          cache-to: type=gha,mode=max,scope=amd64

  build-arm64:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Build and Push ARM64 Image
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ditto:arm64-${{ needs.prepare.outputs.version }}
          cache-from: type=gha,scope=arm64
          cache-to: type=gha,mode=max,scope=arm64

  create-manifest:
    needs: [prepare, build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Create and Push Manifest
        run: |
          docker manifest create ${{ secrets.DOCKERHUB_USERNAME }}/ditto:${{ needs.prepare.outputs.version }} \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/ditto:amd64-${{ needs.prepare.outputs.version }} \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/ditto:arm64-${{ needs.prepare.outputs.version }}

          docker manifest create ${{ secrets.DOCKERHUB_USERNAME }}/ditto:latest \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/ditto:amd64-${{ needs.prepare.outputs.version }} \
            --amend ${{ secrets.DOCKERHUB_USERNAME }}/ditto:arm64-${{ needs.prepare.outputs.version }}

          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/ditto:${{ needs.prepare.outputs.version }}
          docker manifest push ${{ secrets.DOCKERHUB_USERNAME }}/ditto:latest

      - name: Create Git Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a v${{ needs.prepare.outputs.version }} -m "Release version ${{ needs.prepare.outputs.version }}"
          git push origin v${{ needs.prepare.outputs.version }}
